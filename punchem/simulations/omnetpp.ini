[General]
network = Network
#sim-time-limit = 1000s
#warmup-period = 0s
debug-on-errors = true

#Player
#*.player.recover_rate_x = ${0,50,100}

# RNGs
num-rngs = 4
seed-set = ${repetition}
**.minion.rng-0 = 0
**.minion.rng-1 = 1
**.boss.rng-0 = 2
**.boss.rng-1 = 3

#-------------------------------------------------
#				EXAMPLE
#-------------------------------------------------


[Config Example_GameMode_Easy]
sim-time-limit = 1000s
#warmup-period = 0s
repeat = 5


# Minion
**.minion.arrival_distribution = 0
**.minion.service_distribution = 0
*.minion.arrival_mean = 2
*.minion.service_mean = 1

# Boss
**.boss.arrival_distribution = 0
**.boss.service_distribution = 0
*.boss.arrival_mean = 10
*.boss.service_mean = 5

#Player
*.player.recover_rate_x = 100


#-------------------------------------------------
#				DEBUGGING
#-------------------------------------------------

[Config Degugging]
sim-time-limit = 1000s
#warmup-period = 500s

repeat = 1

# Minion
*.minion.arrival_distribution = 0
*.minion.service_distribution = 0
*.minion.arrival_mean = 3
*.minion.service_mean = 0.5

# Boss
*.boss.arrival_distribution = 0
*.boss.service_distribution = 0
*.boss.arrival_mean = 10
*.boss.service_mean = 5


#Player
*.player.recover_rate_x = ${-100,0,25,99,100,150}


#-------------------------------------------------
#				VERIFICATION
#-------------------------------------------------

#----CONSTANT DISTRIBUTION TEST----#
[Config Constant_test]
sim-time-limit = 1000s
repeat = 1

*.minion.arrival_distribution = 1 # 1 = constant distribution
*.minion.service_distribution = 1
*.boss.service_distribution = 1
*.boss.arrival_distribution = 1


[Config Constant_test_easy_game_mode] #constant arrival/service time, no minion recover, low minion/boss service/arrival ratio
extends = Constant_test

*.minion.arrival_mean = 5
*.minion.service_mean = 2

*.boss.arrival_mean = 10
*.boss.service_mean = 3

*.player.recover_rate_x = 0


[Config Constant_test_medium_game_mode] #constant arrival/service time, 50% minion recover rate, medium minion/boss service/arrival ratio
extends = Constant_test

*.minion.arrival_mean = 1
*.minion.service_mean = 2

*.boss.arrival_mean = 3
*.boss.service_mean = 3

#Player
*.player.recover_rate_x = 50


[Config Constant_test_hard_game_mode]
extends = Constant_test

*.minion.arrival_mean = 0.5
*.minion.service_mean = 2

*.boss.arrival_mean = 5
*.boss.service_mean = 10

*.player.recover_rate_x = 100



#----DEGENERACY TEST----#
[Config Degeneracy_test]
sim-time-limit = 1000s
repeat = 1


# Minion
*.minion.arrival_distribution = 0 # 0 = exponential distribution
*.minion.service_distribution = 0
*.minion.arrival_mean = 0
*.minion.service_mean = 0

# Boss
*.boss.arrival_distribution = 0
*.boss.service_distribution = 0
*.boss.arrival_mean = 0
*.boss.service_mean = 0

#----CONSISTENCY TEST----#

#CONSISTENCY TEST - BOSSES
[Config Consistency_test_bosses]
sim-time-limit = 1000s
repeat = 5

**.minion.arrival_distribution = 0 # 0 = exponential distribution
**.minion.service_distribution = 0

**.boss.arrival_distribution = 0
**.boss.service_distribution = 0

*.minion.arrival_mean = 10
*.minion.service_mean = 1

#Consistency for number of bosses defeated
[Config Consistency_test_bosses_1]
extends = Consistency_test_bosses
*.boss.arrival_mean = 1
*.boss.service_mean = 3

[Config Consistency_test_bosses_2]
extends = Consistency_test_bosses
*.boss.arrival_mean = 1
*.boss.service_mean = 2


#Consistency for mean response time
[Config Consistency_test_bosses_response_time_1]
extends = Consistency_test_bosses

*.boss.arrival_mean = 10
*.boss.service_mean = 1


[Config Consistency_test_bosses_response_time_2]
extends = Consistency_test_bosses

*.boss.arrival_mean = 10
*.boss.service_mean = 2


#Consistency for mean waiting time
[Config Consistency_test_bosses_waiting_time_1]
extends = Consistency_test_bosses

*.boss.arrival_mean = 10
*.boss.service_mean = 2

[Config Consistency_test_bosses_waiting_time_2]
extends = Consistency_test_bosses

*.boss.arrival_mean = 10
*.boss.service_mean = 12




#CONSISTENCY TEST - MINIONS
[Config Consistency_test_minions]
sim-time-limit = 1000s
repeat = 5

**.minion.arrival_distribution = 0 # 0 = exponential distribution
**.minion.service_distribution = 0

**.boss.arrival_distribution = 1
**.boss.service_distribution = 1

*.boss.arrival_mean = 1500 #fixed
*.boss.service_mean = 0.1  #fixed

#Consistency for number of minions defeated
[Config Consistency_test_minions_1]
extends = Consistency_test_minions
*.minion.arrival_mean = 1
*.minion.service_mean = 3

[Config Consistency_test_minions_2]
extends = Consistency_test_minions
*.minion.arrival_mean = 1
*.minion.service_mean = 2


#Consistency for mean response time
[Config Consistency_test_minions_response_time_1]
extends = Consistency_test_minions
*.minion.arrival_mean = 10
*.minion.service_mean = 1

[Config Consistency_test_minions_response_time_2]
extends = Consistency_test_minions
*.minion.arrival_mean = 10
*.minion.service_mean = 2


#Consistency for mean waiting time
[Config Consistency_test_minions_waiting_time_1]
extends = Consistency_test_minions

*.minion.arrival_mean = 10
*.minion.service_mean = 2

[Config Consistency_test_minion_waiting_time_2]
extends = Consistency_test_minions

*.minion.arrival_mean = 10
*.minion.service_mean = 12


#CONSISTENCY TEST RECOVER RATE
[Config Consistency_test_recover_rate]
sim-time-limit = 1000s
repeat = 5

**.minion.arrival_distribution = 0
**.minion.service_distribution = 0
*.minion.arrival_mean = 2
*.minion.service_mean = 1.7

**.boss.arrival_distribution = 0
**.boss.service_distribution = 0
*.boss.arrival_mean = 10
*.boss.service_mean = 5

*.player.recover_rate_x = ${0,50,100}



#----CONTINUITY TEST----#
[Config Continuity_test_bosses]
sim-time-limit = 1000s
repeat = 5

**.minion.arrival_distribution = 0
**.minion.service_distribution = 0
*.minion.arrival_mean = 2
*.minion.service_mean = ${1,1.1}

**.boss.arrival_distribution = 0
**.boss.service_distribution = 0
*.boss.arrival_mean = 10
*.boss.service_mean = ${5,5.1}

*.player.recover_rate_x = 100


